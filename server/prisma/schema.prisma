
// prisma/schema.prisma

generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "postgresql"
url      = env("DATABASE_URL")
}

model User {
id       Int      @id @default(autoincrement())
name     String
email    String   @unique
password String
role     String   @default("user")
company  Company? @relation(fields: [companyId], references: [id])
companyId Int?
moves    MoveRequest[]
}

model Company {
id     Int     @id @default(autoincrement())
name   String
users  User[]
trucks Truck[]
}

model MoveRequest {
id          Int            @id @default(autoincrement())
user        User           @relation(fields: [userId], references: [id])
userId      Int
origin      Location       @relation("OriginLocation", fields: [originId], references: [id])
originId    Int
destination Location       @relation("DestinationLocation", fields: [destinationId], references: [id])
destinationId Int
status      BookingStatus  @default(PENDING)
inventory   InventoryItem[]
createdAt   DateTime       @default(now())
}

model Truck {
id        Int       @id @default(autoincrement())
plate     String    @unique
capacity  Int
company   Company   @relation(fields: [companyId], references: [id])
companyId Int
}

model InventoryItem {
id            Int         @id @default(autoincrement())
name          String
quantity      Int
moveRequest   MoveRequest @relation(fields: [moveRequestId], references: [id])
moveRequestId Int
}

model Location {
id        Int    @id @default(autoincrement())
address   String
city      String
province  String
postal    String
moveFrom  MoveRequest[] @relation("OriginLocation")
moveTo    MoveRequest[] @relation("DestinationLocation")
}

enum BookingStatus {
PENDING
CONFIRMED
IN_PROGRESS
COMPLETED
CANCELLED
}

